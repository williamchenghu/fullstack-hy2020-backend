{"version":3,"sources":["components/Fields.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/data.js","App.js","index.js"],"names":["Fields","fieldName","newField","handleFieldChange","value","onChange","PersonForm","updatePhonebook","addName","addNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","personList","filterKey","deletePerson","filter","e","name","toLowerCase","includes","map","key","id","number","onClick","Notification","message","messageStyle","style","baseURL","source","axios","CancelToken","get","cancelToken","token","then","response","data","catch","error","isCancel","console","log","alert","newObject","post","put","delete","cancel","messagePositive","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","messageNegative","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","setMessageStyle","styledMessage","setTimeout","useEffect","a","dataAPI","initialData","fetchPersons","event","target","preventDefault","matchPerson","find","existingPerson","window","confirm","returnedData","editPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fccad014.chunk.js","sourcesContent":["import React from 'react';\n\nconst Fields = ({ fieldName, newField, handleFieldChange }) => (\n  <div>\n    {fieldName}: <input value={newField} onChange={handleFieldChange} />\n  </div>\n);\n\nexport default Fields;\n","import React from 'react';\nimport Fields from './Fields';\n\nconst PersonForm = ({\n  updatePhonebook,\n  addName,\n  addNumber,\n  handleNameChange,\n  handleNumberChange,\n}) => (\n  <form onSubmit={updatePhonebook}>\n    <Fields\n      fieldName=\"name\"\n      newField={addName}\n      handleFieldChange={handleNameChange}\n    />\n    <Fields\n      fieldName=\"number\"\n      newField={addNumber}\n      handleFieldChange={handleNumberChange}\n    />\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ personList, filterKey, deletePerson }) =>\n  personList\n    .filter((e) => e.name.toLowerCase().includes(filterKey.toLowerCase()))\n    .map((e) => (\n      <div key={`${e.id}:${e.number}`}>\n        {e.name} {e.number}{' '}\n        <button onClick={() => deletePerson(e.id)}>delete</button>\n      </div>\n    ));\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ message, messageStyle }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={messageStyle}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseURL = '/api/persons';\nconst source = axios.CancelToken.source();\n\nconst getAll = () => {\n  const request = axios.get(baseURL, { cancelToken: source.token });\n  return request\n    .then((response) => response.data)\n    .catch((error) => {\n      axios.isCancel(error)\n        ? console.log('Fetching phonebook data is cancelled')\n        : alert(error);\n    });\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseURL, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteEntry = (id) => axios.delete(`${baseURL}/${id}`);\n\nconst cancelToken = () => source.cancel();\n\nexport default { getAll, create, update, deleteEntry, cancelToken };\n","import React, { useState, useEffect } from 'react';\nimport Fields from './components/Fields';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport dataAPI from './services/data';\n\nconst messagePositive = {\n  color: 'green',\n  background: 'lightgrey',\n  fontSize: 20,\n  borderStyle: 'solid',\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10,\n};\n\nconst messageNegative = {\n  color: 'red',\n  background: 'lightgrey',\n  fontSize: 20,\n  borderStyle: 'solid',\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10,\n};\n\nconst App = () => {\n  //States\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageStyle, setMessageStyle] = useState({});\n  //Event handlers\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilterChange = (event) => setNewFilter(event.target.value);\n  const styledMessage = (style, message) => {\n    setMessageStyle(style);\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    const fetchPersons = async () => {\n      await dataAPI.getAll().then((initialData) => setPersons(initialData));\n    };\n\n    fetchPersons();\n    return () => dataAPI.cancelToken();\n  }, []);\n\n  const missingInput = () =>\n    styledMessage(messageNegative, 'Missing Name or Number to add the person');\n\n  const editPerson = (existingPerson) => {\n    if (\n      window.confirm(\n        `${existingPerson.name} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      return dataAPI\n        .update(existingPerson.id, { ...existingPerson, number: newNumber })\n        .then((returnedData) =>\n          setPersons((persons) =>\n            persons.map((e) => (e.id !== existingPerson.id ? e : returnedData))\n          )\n        )\n        .catch((error) => {\n          styledMessage(\n            messageNegative,\n            `Information of ${existingPerson.name} has already been removed from server`\n          );\n          setPersons(persons.filter((e) => e.id !== existingPerson.id));\n        });\n    }\n  };\n\n  const createPerson = () => {\n    dataAPI\n      .create({\n        name: newName,\n        number: newNumber,\n      })\n      .then((returnedData) => {\n        setPersons(persons.concat(returnedData));\n        styledMessage(messagePositive, `Added ${returnedData.name}`);\n      });\n  };\n\n  const resetInput = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const updatePhonebook = (event) => {\n    event.preventDefault();\n    // catch missing input\n    if (!newName || !newNumber) {\n      return missingInput();\n    }\n    //find match of input person from current phonebook\n    const matchPerson = persons.find((e) => newName === e.name);\n    //if input person already exists\n    if (matchPerson) {\n      editPerson(matchPerson);\n    } else {\n      //otherwise create the input person\n      createPerson();\n    }\n    //reset input fields\n    resetInput();\n  };\n\n  const deletePerson = (id) =>\n    window.confirm(`Delete ${persons.find((e) => id === e.id).name} ?`) &&\n    (dataAPI.deleteEntry(id), setPersons(persons.filter((e) => e.id !== id)));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageStyle={messageStyle} />\n      <Fields\n        fieldName=\"filter shown with\"\n        newField={newFilter}\n        handleFieldChange={handleFilterChange}\n      />\n      <h2>Add a new</h2>\n      <PersonForm\n        updatePhonebook={updatePhonebook}\n        addName={newName}\n        addNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        personList={persons}\n        filterKey={newFilter}\n        deletePerson={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}